name: CI

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
  format:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Format
        run: yarn format:check
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Lint
        run: yarn lint:check
  test:
    name: Test
    runs-on: ubuntu-latest
    environment: supabase_test

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Create .env file
        run: |
          cat <<EOF > .env
          ANON_KEY="${{ secrets.ANON_KEY }}"
          SERVICE_ROLE_KEY="${{ secrets.SERVICE_ROLE_KEY }}"
          JWT_SECRET="${{ secrets.JWT_SECRET }}"
          DASHBOARD_USERNAME="${{ vars.DASHBOARD_USERNAME }}"
          DASHBOARD_PASSWORD="${{ vars.DASHBOARD_PASSWORD }}"
          POSTGRES_HOST="${{ vars.POSTGRES_HOST }}"
          POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_DB="${{ vars.POSTGRES_DB }}"
          POSTGRES_PORT="${{ vars.POSTGRES_PORT }}"
          EOF
      - name: Test
        run: yarn test:docker
